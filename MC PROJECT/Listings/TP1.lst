C51 COMPILER V9.60.0.0   TP1                                                               07/16/2022 17:25:03 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE TP1
OBJECT MODULE PLACED IN .\Objects\TP1.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE TP1.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\TP1.l
                    -st) TABS(2) OBJECT(.\Objects\TP1.obj)

line level    source

   1          
   2          // password based door lock system in 8051 microprocessor
   3          
   4          #include <reg51.h>
   5          
   6          // connected pins
   7          // keypad rows
   8          sbit keyrow1 = P2 ^ 0;
   9          sbit keyrow2 = P2 ^ 1;
  10          sbit keyrow3 = P2 ^ 2;
  11          sbit keyrow4 = P2 ^ 3;
  12          //keypad column
  13          sbit keycolumn1 = P3 ^ 0;
  14          sbit keycolumn2 = P3 ^ 1;
  15          sbit keycolumn3 = P3 ^ 2;
  16          
  17          // motor pins
  18          sbit motorpin1 = P3 ^ 3;
  19          sbit motorpin2 = P3 ^ 4;
  20          
  21          // led pins
  22          sbit rs = P3 ^ 5;
  23          sbit rw = P3 ^ 6;
  24          sbit en = P3 ^ 7;
  25          
  26          //functions
  27          void lcdcmd(unsigned char);
  28          void lcddat(unsigned char);
  29          void lcddisplay(unsigned char *q);
  30          char keypad();
  31          int check();
  32          void delay(unsigned int);
  33          unsigned char pin[] = {"12345"};
  34          unsigned char Epin[5];
  35          unsigned char master_pass[]={"54321"};
  36          unsigned char flag=0;
  37          void master();
  38          
  39          
  40          // main function
  41          void main()
  42          {
  43   1          lcdcmd(0x0F); //decimal value: 15 ,lcd on cursor on
  44   1          lcdcmd(0x38); //decimal value: 56,2 lines and 5x7 matrix
  45   1          lcdcmd(0x01); //decimal value: 1,clear display
  46   1      
  47   1          while (1)
  48   1          {
  49   2              unsigned int i = 0;
  50   2              lcdcmd(0x80); //decimal value: 128,Force cursor to beginning to 1st line
  51   2              lcddisplay("ENTER PASSWORD");
  52   2              delay(1000);
  53   2              lcdcmd(0xc0); //decimal value: 192,Force cursor to beginning to 2nd line
  54   2              while (pin[i] != '\0')
C51 COMPILER V9.60.0.0   TP1                                                               07/16/2022 17:25:03 PAGE 2   

  55   2              {
  56   3                  Epin[i] = keypad();
  57   3                  delay(1000);
  58   3                  i++;
  59   3              }
  60   2              i=check();
  61   2              if (flag>=3)
  62   2              {
  63   3                lcdcmd(0x01); //decimal value: 1, clear screen
  64   3                lcdcmd(0x80); //decimal value: 128,Force cursor to beginning to 1st line
  65   3                lcddisplay("SYSTEM LOCKED");
  66   3                 delay(10);
  67   3               lcdcmd(0x01); //decimal value: 1, clear screen
  68   3               lcdcmd(0x80); //decimal value: 128,Force cursor to beginning to 1st line
  69   3                
  70   3                master();
  71   3              }
  72   2          }
  73   1      }
  74          
  75          //delay function
  76          void delay(unsigned int j)
  77          {
  78   1          int a, b;
  79   1          for (a = 0; a < j; a++)
  80   1          {
  81   2              for (b = 0; b < 10; b++);
  82   2          }
  83   1      }
  84          
  85          // lcd commands functions
  86          void lcdcmd(unsigned char A)
  87          {
  88   1          P1 = A;
  89   1          rs = 0;
  90   1          rw = 0;
  91   1          en = 1;
  92   1          delay(1000);
  93   1          en = 0;
  94   1      }
  95          
  96          //lcd data function
  97          
  98          void lcddat(unsigned char i)
  99          {
 100   1          P1 = i;
 101   1          rs = 1;
 102   1          rw = 0;
 103   1          en = 1;
 104   1          delay(1000);
 105   1          en = 0;
 106   1      }
 107          
 108          //lcd display charecters function
 109          
 110          void lcddisplay(unsigned char *q)
 111          {
 112   1          int k;
 113   1          for (k = 0; q[k] != '\0'; k++)
 114   1          {
 115   2              lcddat(q[k]);
 116   2          }
C51 COMPILER V9.60.0.0   TP1                                                               07/16/2022 17:25:03 PAGE 3   

 117   1          delay(10000);
 118   1      }
 119          
 120          // assign keypad character value function
 121          
 122          char keypad()
 123          {
 124   1          int x = 0;
 125   1          while (x == 0)
 126   1          {
 127   2              // assign values for first row
 128   2              keyrow1 = 0;
 129   2              keyrow2 = 1;
 130   2              keyrow3 = 1;
 131   2              keyrow4 = 1;
 132   2              if (keycolumn1 == 0)
 133   2              {
 134   3                  lcddat('*');
 135   3                  delay(1000);
 136   3                  x = 1;
 137   3                  return '1';
 138   3              }
 139   2              if (keycolumn2 == 0)
 140   2              {
 141   3                  lcddat('*');
 142   3                  delay(1000);
 143   3                  x = 1;
 144   3                  return '2';
 145   3              }
 146   2              if (keycolumn3 == 0)
 147   2              {
 148   3                  lcddat('*');
 149   3                  delay(1000);
 150   3                  x = 1;
 151   3                  return '3';
 152   3              }
 153   2              // assign values for second row
 154   2              keyrow1 = 1;
 155   2              keyrow2 = 0;
 156   2              keyrow3 = 1;
 157   2              keyrow4 = 1;
 158   2      
 159   2              if (keycolumn1 == 0)
 160   2              {
 161   3                  lcddat('*');
 162   3                  delay(1000);
 163   3                  x = 1;
 164   3                  return '4';
 165   3              }
 166   2              if (keycolumn2 == 0)
 167   2              {
 168   3                  lcddat('*');
 169   3                  delay(1000);
 170   3                  x = 1;
 171   3                  return '5';
 172   3              }
 173   2              if (keycolumn3 == 0)
 174   2              {
 175   3                  lcddat('*');
 176   3                  delay(1000);
 177   3                  x = 1;
 178   3                  return '6';
C51 COMPILER V9.60.0.0   TP1                                                               07/16/2022 17:25:03 PAGE 4   

 179   3              }
 180   2      
 181   2              // assign values for third row
 182   2              keyrow1 = 1;
 183   2              keyrow2 = 1;
 184   2              keyrow3 = 0;
 185   2              keyrow4 = 1;
 186   2              if (keycolumn1 == 0)
 187   2              {
 188   3                  lcddat('*');
 189   3                  delay(1000);
 190   3                  x = 1;
 191   3                  return '7';
 192   3              }
 193   2              if (keycolumn2 == 0)
 194   2              {
 195   3                  lcddat('*');
 196   3                  delay(1000);
 197   3                  x = 1;
 198   3                  return '8';
 199   3              }
 200   2              if (keycolumn3 == 0)
 201   2              {
 202   3                  lcddat('*');
 203   3                  delay(1000);
 204   3                  x = 1;
 205   3                  return '9';
 206   3              }
 207   2      
 208   2              // assign values for forth row
 209   2              keyrow1 = 1;
 210   2              keyrow2 = 1;
 211   2              keyrow3 = 1;
 212   2              keyrow4 = 0;
 213   2      
 214   2              if (keycolumn1 == 0)
 215   2              {
 216   3                  lcddat('*');
 217   3                  delay(1000);
 218   3                  x = 1;
 219   3                  return '*';
 220   3              }
 221   2              if (keycolumn2 == 0)
 222   2              {
 223   3                  lcddat('*');
 224   3                  delay(1000);
 225   3                  x = 1;
 226   3                  return '0';
 227   3              }
 228   2              if (keycolumn3 == 0)
 229   2              {
 230   3                  lcddat('*');
 231   3                  delay(1000);
 232   3                  x = 1;
 233   3                  return '#';
 234   3              }
 235   2          }
 236   1      }
 237          
 238          // password check function and run the door motor
 239          
 240          int check()
C51 COMPILER V9.60.0.0   TP1                                                               07/16/2022 17:25:03 PAGE 5   

 241          {
 242   1          //  compare the input value with the assign password value
 243   1          if (pin[0] == Epin[0] && pin[1] == Epin[1] && pin[2] == Epin[2] && pin[3] == Epin[3] && pin[4] == Epin
             -[4])
 244   1          {
 245   2              delay(1000);
 246   2              lcdcmd(0x01); //decimal value: 1, clear screen
 247   2              lcdcmd(0x81); //decimal value: 129
 248   2              // show pin is correct
 249   2              lcddisplay("PIN CORRECT");
 250   2              delay(1000);
 251   2              // door motor will run
 252   2              motorpin1 = 0;
 253   2              motorpin2 = 1;
 254   2              lcdcmd(0xc1); //decimal value: 193
 255   2              // show the door is unlocked
 256   2              lcddisplay("DOOR OPENED");
 257   2              
 258   2              delay(100);
 259   2              lcdcmd(0x01); //decimal value: 1 clear screen
 260   2              lcdcmd(0x80); //decimal value: 128,Force cursor to beginning to 1st line
 261   2              lcddisplay("DOOR CLOSING IN");
 262   2              delay(10);
 263   2              lcdcmd(0x01); //decimal value: 1, clear screen
 264   2              lcdcmd(0x80); //decimal value: 128,Force cursor to beginning to 1st line
 265   2                   lcddisplay("5");
 266   2               delay(10);
 267   2               lcdcmd(0x01); //decimal value: 1, clear screen
 268   2               lcdcmd(0x80); //decimal value: 128,Force cursor to beginning to 1st line
 269   2               
 270   2                   lcddisplay("4");
 271   2               delay(10);
 272   2               lcdcmd(0x01); //decimal value: 1, clear screen
 273   2               lcdcmd(0x80); //decimal value: 128,Force cursor to beginning to 1st line
 274   2               
 275   2                   lcddisplay("3"); 
 276   2               delay(10);
 277   2               lcdcmd(0x01); //decimal value: 1, clear screen
 278   2               lcdcmd(0x80); //decimal value: 128,Force cursor to beginning to 1st line
 279   2              
 280   2                   lcddisplay("2");
 281   2               delay(10);
 282   2               lcdcmd(0x01); //decimal value: 1, clear screen
 283   2               lcdcmd(0x80); //decimal value: 128,Force cursor to beginning to 1st line
 284   2              
 285   2                   lcddisplay("1");
 286   2               delay(10);
 287   2               lcdcmd(0x01); //decimal value: 1, clear screen
 288   2               lcdcmd(0x80); //decimal value: 128,Force cursor to beginning to 1st line
 289   2               
 290   2                   lcddisplay("0");
 291   2               delay(10);
 292   2               lcdcmd(0x01); //decimal value: 1, clear screen
 293   2               lcdcmd(0x80); //decimal value: 128,Force cursor to beginning to 1st line
 294   2              
 295   2              motorpin1 = 0;
 296   2              motorpin2 = 0;
 297   2              lcdcmd(0x01); //decimal value: 1, clear screen
 298   2              lcdcmd(0x80); //decimal value: 128,Force cursor to beginning to 1st line
 299   2              lcddisplay("DOOR CLOSED");
 300   2              delay(10);
 301   2              lcdcmd(0x01); //decimal value: 1, clear screen
C51 COMPILER V9.60.0.0   TP1                                                               07/16/2022 17:25:03 PAGE 6   

 302   2              flag=0;
 303   2              return 0;
 304   2            
 305   2            }
 306   1          
 307   1          else
 308   1          {
 309   2            flag=flag+1;
 310   2            
 311   2            lcdcmd(0x01); //decimal value: 1,clear screen
 312   2              lcdcmd(0x80); //decimal value: 128, Force cursor to beginning to 1st line
 313   2              lcddisplay("WRONG PIN");
 314   2              delay(1000);
 315   2              lcdcmd(0x01); //decimal value: 1, clear screen
 316   2            return 0;
 317   2          }
 318   1            
 319   1      }
 320          
 321          void master()
 322          {
 323   1        while(1)
 324   1        {     
 325   2              unsigned int i = 0;
 326   2              lcdcmd(0x80); //decimal value: 128,Force cursor to beginning to 1st line
 327   2              lcddisplay("ENTER MASTER KEY");
 328   2              delay(1000);
 329   2              lcdcmd(0xc0); //decimal value: 192,Force cursor to beginning to 2nd line
 330   2              while (pin[i] != '\0')
 331   2              {
 332   3                  Epin[i] = keypad();
 333   3                  delay(1000);
 334   3                  i++;
 335   3              }
 336   2              i=check1();
*** WARNING C206 IN LINE 336 OF TP1.c: 'check1': missing function-prototype
 337   2              if (i==1)
 338   2              {
 339   3                break;
 340   3              }
 341   2              else if (i==0)
 342   2              {
 343   3                continue;
 344   3              }
 345   2        }
 346   1      }
 347          int check1()
 348          {
 349   1          //  compare the input value with the assign password value
 350   1          if (master_pass[0] == Epin[0] && master_pass[1] == Epin[1] && master_pass[2] == Epin[2] && master_pass
             -[3] == Epin[3] && master_pass[4] == Epin[4])
 351   1          {
 352   2              delay(1000);
 353   2              lcdcmd(0x01); //decimal value: 1, clear screen
 354   2              lcdcmd(0x81); //decimal value: 129
 355   2              // show pin is correct
 356   2              lcddisplay("PIN CORRECT");
 357   2              delay(1000);
 358   2              // door motor will run
 359   2              motorpin1 = 0;
 360   2              motorpin2 = 1;
 361   2              lcdcmd(0xc1); //decimal value: 193
C51 COMPILER V9.60.0.0   TP1                                                               07/16/2022 17:25:03 PAGE 7   

 362   2              // show the door is unlocked
 363   2              lcddisplay("DOOR OPENED");
 364   2              
 365   2              delay(100);
 366   2              lcdcmd(0x01); //decimal value: 1, clear screen
 367   2              lcdcmd(0x80); //decimal value: 128,Force cursor to beginning to 1st line
 368   2              lcddisplay("DOOR CLOSING IN");
 369   2               delay(10);
 370   2               lcdcmd(0x01); //decimal value: 1, clear screen
 371   2               lcdcmd(0x80); //decimal value: 128,Force cursor to beginning to 1st line
 372   2                   lcddisplay("5");
 373   2               delay(10);
 374   2               lcdcmd(0x01); //decimal value: 1, clear screen
 375   2               lcdcmd(0x80); //decimal value: 128,Force cursor to beginning to 1st line
 376   2               
 377   2                   lcddisplay("4");
 378   2               delay(10);
 379   2               lcdcmd(0x01); //decimal value: 1, clear screen
 380   2               lcdcmd(0x80); //decimal value: 128,Force cursor to beginning to 1st line
 381   2               
 382   2                   lcddisplay("3"); 
 383   2               delay(10);
 384   2               lcdcmd(0x01); //decimal value: 1, clear screen
 385   2               lcdcmd(0x80); //decimal value: 128,Force cursor to beginning to 1st line
 386   2              
 387   2                   lcddisplay("2");
 388   2               delay(10);
 389   2               lcdcmd(0x01); //decimal value: 1, clear screen
 390   2               lcdcmd(0x80); //decimal value: 128,Force cursor to beginning to 1st line
 391   2              
 392   2                   lcddisplay("1");
 393   2               delay(10);
 394   2               lcdcmd(0x01); //decimal value: 1, clear screen
 395   2               lcdcmd(0x80); //decimal value: 128,Force cursor to beginning to 1st line
 396   2               
 397   2                   lcddisplay("0");
 398   2               delay(10);
 399   2               lcdcmd(0x01); //decimal value: 1, clear screen
 400   2               lcdcmd(0x80); //decimal value: 128,Force cursor to beginning to 1st line
 401   2              
 402   2              motorpin1 = 0;
 403   2              motorpin2 = 0;
 404   2              lcdcmd(0x01); //decimal value: 1, clear screen
 405   2              lcdcmd(0x80); //decimal value: 128,Force cursor to beginning to 1st line
 406   2              lcddisplay("DOOR CLOSED");
 407   2              delay(10);
 408   2              lcdcmd(0x01); //decimal value: 1, clear screen
 409   2              flag =0;
 410   2              return 1;
 411   2            
 412   2            }
 413   1          
 414   1          else
 415   1          {
 416   2             lcdcmd(0x01); //decimal value: 1, clear screen 
 417   2            return 0;
 418   2          }
 419   1            
 420   1      }
 421          // end
*** WARNING C291 IN LINE 236 OF TP1.c: not every exit path returns a value

C51 COMPILER V9.60.0.0   TP1                                                               07/16/2022 17:25:03 PAGE 8   


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    939    ----
   CONSTANT SIZE    =    120    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     18       9
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  2 WARNING(S),  0 ERROR(S)
